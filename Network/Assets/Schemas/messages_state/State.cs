// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace messages_state
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct State : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static State GetRootAsState(ByteBuffer _bb) { return GetRootAsState(_bb, new State()); }
  public static State GetRootAsState(ByteBuffer _bb, State obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public State __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte Health { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<messages_state.State> CreateState(FlatBufferBuilder builder,
      byte health = 0) {
    builder.StartTable(1);
    State.AddHealth(builder, health);
    return State.EndState(builder);
  }

  public static void StartState(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddHealth(FlatBufferBuilder builder, byte health) { builder.AddByte(0, health, 0); }
  public static Offset<messages_state.State> EndState(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<messages_state.State>(o);
  }
  public static void FinishStateBuffer(FlatBufferBuilder builder, Offset<messages_state.State> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedStateBuffer(FlatBufferBuilder builder, Offset<messages_state.State> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
